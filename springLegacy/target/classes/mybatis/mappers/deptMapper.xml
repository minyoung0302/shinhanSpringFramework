<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- namespace : 이름공간(group), 다른 mapper의 id와 중복시 구분하기 위함 -->
  <!-- namespace는 어디서도 충돌되면 안됨 : 보통 회사의 url사용 -->
<mapper namespace="com.shinhan.dept">
<!-- DB의 칼럼 이름과 JAVA의 field 이름이 다르다면 mapping하는 map을 정의한다 -->
<!-- <resultMap type="com.shinhan.myapp.vo.DeptDTO2" id = deptVO2">
	<result property="dept_id" coloum="department_id" />
	<result property="dept_name" coloum="department_name" />
	<result property="manager_id" coloum="manager_id" />
	<result property="location_id" coloum="location_id" />
</resultMap> -->
  <select id="selectAll" resultType="deptVO">
  <!-- 세미콜론 사용하지 않는다. -->
		select *
		from departments
		order by 1
  </select>
    <select id="selectAll2" resultType="com.shinhan.myapp.vo.DeptDTO">
  <!-- DB의 칼럼 이름과 JAVA의 field이름이 다른 경우
  		mapping시에 rs.get()==>dto.set() 문제 있음
   -->
		select *
		from departments
		order by 1
  </select>
  <select id = "selectById" parameterType="int" resultType="deptVO">
  		select *
  		from departments
  		where department_id = #{aa}
  </select>
  <insert id="insert" parameterType="deptVO">
  		insert into departments (department_id,department_name, manager_id, location_id)
  		
  		values(
	  		#{department_id},
	  		#{department_name},
	  		#{manager_id},
	  		#{location_id})
  </insert>
  <update id="update" parameterType="deptVO">
  		update departments
  		set department_name = #{department_name}
  			manager_id = #{manager_id}
  			location_id = #{location_id}
  		where department_id = #{department_id}
  </update>
  <delete id="delete">
  		delete from delete from departments where department_id = #{did}
  </delete>
</mapper>